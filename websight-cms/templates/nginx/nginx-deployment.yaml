{{- if .Values.nginx.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "websight-cms.fullname" . }}-nginx
  labels:
    app.kubernetes.io/name: {{ include "websight-cms.name" . }}-nginx
    app.kubernetes.io/instance: {{ .Release.Name }}-nginx
    app.kubernetes.io/version: {{ .Values.nginx.image.tag }}
    app.kubernetes.io/websight-version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: "web-server"
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.nginx.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "websight-cms.name" . }}-nginx
      app.kubernetes.io/instance: {{ .Release.Name }}-nginx
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "websight-cms.name" . }}-nginx
        app.kubernetes.io/instance: {{ .Release.Name }}-nginx
    spec:
      containers:
        - image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          name: nginx
          env:
            - name: NGINX_HOST
              value: {{ .Values.nginx.host }}
            - name: NGINX_ENVSUBST_OUTPUT_DIR
              value: /tmp/nginx/conf.d
            {{- range $k, $v := .Values.nginx.env }}
            - name: {{ $v.name }}
              value: {{ $v.value | quote }}
            {{- end }}
          ports:
            - containerPort: 80
          {{- if .Values.nginx.resources }}
          resources:
{{ toYaml .Values.nginx.resources | indent 12 }}
          {{- end }}
          volumeMounts:
            - name: tmp-config
              mountPath: /tmp/nginx/conf.d
            - name: site-repository
              mountPath: /usr/share/nginx/html
              readOnly: true
            - name: nginx-config
              mountPath: "/etc/nginx/conf.d"
              readOnly: true
            - name: nginx-config-templates
              mountPath: "/etc/nginx/templates"
              readOnly: true
          {{- if .Values.nginx.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.nginx.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.nginx.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.nginx.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.nginx.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.nginx.livenessProbe.successThreshold }}
            httpGet:
              path: /health
              port: 80
              scheme: HTTP
          {{- end }}

      restartPolicy: Always
      volumes:
        - name: site-repository
          persistentVolumeClaim:
            claimName: {{ include "websight-cms.fullname" . }}-site-repository
            readOnly: true
        - name: tmp-config
          emptyDir:
            medium: Memory
            sizeLimit: 2Mi
        - name: nginx-config
          projected:
            sources:
              - configMap:
                  name: {{ include "websight-cms.name" . }}-default-configs
                  items:
                    - key: healthcheck.conf
                      path: healthcheck.conf
                    - key: 10-include-tmp.conf
                      path: 10-include-tmp.conf
              {{- range .Values.nginx.customServerConfigurations }}
              - configMap:
                  name: {{ .configMapName }}
                  items:
{{ toYaml .configNames | indent 20 }}
              {{- end }}
        - name: nginx-config-templates
          projected:
            sources:
              {{- range .Values.nginx.configurationTemplates }}
              - configMap:
                  name: {{ .configMapName }}
                  items:
{{ toYaml .configNames | indent 20 }}
              {{- end }}
      {{- if .Values.nginx.nodeSelector }}
      nodeSelector: {{- .Values.nginx.nodeSelector | toYaml | nindent 8 }}
      {{- end }}
{{- end }}